use findMyRestaurants

db.restaurants.inserMany([...])

1.1 db.restaurants.find().pretty()

1.2 db.restaurants.find({cuisine:"asian"}).pretty()

1.3 db.restaurants.find({kosher:true}).pretty()

1.4 db.restaurants.find({"address.city":"Holon"}).pretty()

1.5 db.restaurants.find({_id:ObjectId("607d3c2b8e6c8c75462cd3de")}).toArray()[0].address

1.6 db.restaurants.find({_id:ObjectId("607d3c2b8e6c8c75462cd3de")}).toArray()[0].address.coordinates

1.7 db.restaurants.find().sort({name:+1}).pretty()

1.8 db.restaurants.find().sort({"address.city":+1}).pretty()

1.9 db.restaurants.updateOne({_id:ObjectId("607d3c2b8e6c8c75462cd3de")},{$set:{name:"ori's place"}})

1.10 db.restaurants.updateOne({_id:ObjectId("607d3c2b8e6c8c75462cd3de")},{$push:{reviews:{date:new Date(),score:10}}})

1.11 db.restaurants.updateMany({},{$set:{kosher:true}})

1.12 db.restaurants.deleteOne({_id:ObjectId("607d3c2b8e6c8c75462cd3e3")})

1.13 db.restaurants.deleteMany({})

1.14 db.restaurants.updateOne({_id:ObjectId("607d57b200b5604ba7b28ad0")},{$inc:{"reviews.1.score":2}})

1.15 db.restaurants.updateOne({_id:ObjectId("607d57b200b5604ba7b28ad0")},{$inc:{"reviews.1.score":-1}})



2.1 db.restaurants.find().forEach((res)=>{print("name: " + res.name)})

2.2 db.restaurants.find().forEach((res)=>{print("city: " + res.address.city)})

2.3db.restaurants.find().forEach((res)=>{print("city coordinates: " + res.address.coordinates)})




3.1 var myReg = new RegExp(/[a-f]/)
      db.restaurants.find().forEach((res)=>{myReg.test(res.name[0])?print(res.name + " start with 'a-f'"):null})

3.2 db.restaurants.count()

3.3 db.restaurants.find().forEach((res)=>{res.reviews.forEach((rev)=>{rev.date.getFullYear()===2016?print(res.name + " got review from 2016"):null})})

4.1  db.restaurants.aggregate([{$project:{pop:{"$avg":"$reviews.score"}}}])